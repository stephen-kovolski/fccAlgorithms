cp [old] [new] copies a file.

mkdir [path] creates a new directory.

mv [old] [new] moves (renames) a file or directory.

rm [path] removes (deletes) a file.

* matches zero or more characters in a filename, so *.txt matches all files ending in .txt.

? matches any single character in a filename, so ?.txt matches a.txt but not any.txt.

Use of the Control key may be described in many ways, including Ctrl-X, Control-X, and ^X.

The shell does not have a trash bin: once something is deleted, it’s really gone.

Most files’ names are something.extension. The extension isn’t required, and doesn’t guarantee anything, but is normally used to indicate the type of data in the file.

'cd -' brings you back to the directory you were just in.  Not just back up one.

$ ls -F /
$ - prompt
ls - command
-F - Option
/ - Argument

*****mkdir

Note that mkdir is not limited to creating single directories one at a time. The -p option allows mkdir to create a directory with nested subdirectories in a single operation:
$ mkdir -p ../project/data ../project/results

The -R option to the ls command will list all nested subdirectories within a directory. Let’s use ls -FR to recursively list the new directory hierarchy we just created in the project directory:
$ ls -FR ../project
--output below--
../project/:
data/  results/

../project/data:

../project/results:






